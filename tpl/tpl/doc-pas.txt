**********************************************************************
* <inf> Pascal : examples
**********************************************************************

comment : { .... }

**********************************************************************

program main(inputfile,outputfile);
uses crt; (Turbo)
constants;
declarations of types/identifiers/functions/procedures;

begin
  statements;
end.

----------------------------------------------------------------------
arguments

program main (input, output)
var   argcnt : integer;
      argstr : packed array[1..#] of char;
begin
  argcnt = argc;              = aantal argumenten incl. prognaam
  argv (argcnt, argstr);      : argstr = argument nr. argcnt
end.

aanroep : main arg1 arg2 ....

**********************************************************************
constants

const maxvec = 100; maxline = 80; yes = 'Y';

**********************************************************************
declarations
----------------------------------------------------------------------
type

type vec                   = array[1..maxvec] of real;
     persoon               = record
                             naam      : string[25];
                             leeftijd  : integer;
                             end;
     TF                    = file of persoon;

----------------------------------------------------------------------
variables and pointers

var  more                  : boolean;
     i,j,n                 : integer;
     ii                    : longint;
     a,b                   : real;
     aa                    : double;
     c1,c2                 : char;
     line1                 : string;                   { maximum 255 }
     v1,v2                 : vec;
     rec                   : persoon;
     bes                   : TF;
     pp                    : ^persoon;

----------------------------------------------------------------------
arrays

var  v3                    : array[1..maxvec] of real;
     v4                    : array[1..200] of real;
     mat                   : array[-5..5,1..maxvec] of real;
     line                  : string[maxline];

----------------------------------------------------------------------
internal files

var  f : text;

**********************************************************************
initialization 

**********************************************************************
memory allocation 

new(pp);
release(pp);

**********************************************************************
assignment statements  

more:=true; more:=false;
i:=5;
j:=i div 3; j:=i mod 3;
a:=1; a:=0.1;
b:=i/5;
c1:='A'; c2:=yes;
line:='dit is een constante string';
v1[1]:=1;
pp^.naam:='Oude'; 
pp^.leeftijd:=100; 

----------------------------------------------------------------------
conversion

**********************************************************************
arithmetic operators

i:=i+1; i:=i+j; i:=i*j;
more:=i=1; more:=i<>1; more:=i>=1;

----------------------------------------------------------------------
logical operators

----------------------------------------------------------------------
relational operators

**********************************************************************
conditional statement

if i=0 then a:=4.14;
if i>0 then a:=3.14 else a:=0;
if i>=0 then begin v1[i+1]:=0; v2[i+1]:=0; end;
if i<>0 then v1[i]:=0 else a:=0;
if (i>0) and (j=0) then a:=0;
if (i<0) or (j<>0) then a:=1;

**********************************************************************
loops

for i:=1 to maxvec do v4[i]:=0;
for i:=20 downto 1 do v1[i]:=0;

i:=0;
while i<20 do begin i:=i+1; v1[i]:=0; end;

i:=0;
repeat i:=i+1; v1[i]:=0 until i=20;

**********************************************************************
file operations ; <stdio.h>

reset (f, 'filename')
assign (f, 'filename');
rewrite (f);
reset (f);
close (f);

assign (f,'demopas1.dat');
while not eof(f) do begin ..... end;
while not eoln(f) do begin ..... end;
seek (bes,n);

**********************************************************************
I/O
======================================================================
output

writeln('Hier komt wat troep  ...');
write('i = ',i,'    ');
write(output,'i = ',i);
writeln;
writeln('i = ',i);
writeln(i:6);
writeln(i);
writeln(i:6,j);
writeln(a);           { smallest possible field, full mantissa }
writeln(a:8);         { 8 character field, as much mantissa as will fit }
writeln(a:9:4);       { 9 character field, 4 decimals }
writeln(5*i,a+i/2:8:4);

begin readln(f,line); writeln(line) end;
write('hoeveel namen   : '); readln(n);
writeln(f,'de eerste regel');
writeln(f,'5 1.234');
writeln(f,'5 1.234 -5');
if not eoln(f) then
begin read(f,c1); write(c1) end else
begin readln(f); writeln end;
write('achternaam  : '); readln(rec.naam);
write('leeftijd    : '); readln(rec.leeftijd);
write(bes,rec);
write(bes,pp^);
read(bes,rec);
with rec do
begin writeln(naam,'     ',leeftijd) end;

======================================================================
input

read(i);
read(input,i);
readln(i);
readln(i,j,a);
readln(c1);
readln(f);
readln(f,i,a);
read(f,b);

***********************************************************************
functions and procedures

function functionname (dummy arguments) : type ;
functionname (actual arguments)
procedure procedurename (dummy arguments);
procedurename (actual arguments)

======================================================================
string manipulation functions in <string.h>

j:=length(line);
line[0]:=chr(j+1);

======================================================================
some mathematical functions

j:=ord(line[0]); 

======================================================================

function normv(var v:vec; n:integer) : real;
var i:integer;  sqsum:real;
begin
  sqsum:=0;
  for i:=1 to n do sqsum:=sqsum+v[i]*v[i];
  normv:=sqrt(sqsum);
end;

procedure fillv(var v:vec; n:integer);
var i:integer;
begin for i:=1 to n do v[i]:=sin(i/10); end;

procedure doit;
var n:integer; v:vec;
begin
  write('aantal elementen :  '); readln(n);
  fillv(v,n);
  writeln('normv   =  ',normv(v,n):8:4);
end;

**********************************************************************

demo programs

**********************************************************************
